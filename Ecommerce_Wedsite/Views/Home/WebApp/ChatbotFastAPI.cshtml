
<!DOCTYPE html>
<!-- Coding By CodingNepal - www.com -->
<html lang="en" dir="ltr">
    <head>
        <meta charset="utf-8">
        <title>Chatbot in JavaScript | CodingNepal</title>
        <link rel="stylesheet" href="~/css/chatbot3.css" type="text/css" media="all">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <!-- Google Fonts Link For Icons -->
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,1,0" /> 
    </head>
    <body>
    <button class="chatbot-toggler" style="margin-right: 30px;">
            <span class="material-symbols-rounded">mode_comment</span>
            <span class="material-symbols-outlined">close</span>
        </button>
        <div class="chatbot" style="z-index: 99998;">
            <header>
                <h2>Chat bot</h2>
                <span class="close-btn material-symbols-outlined">close</span>
            </header>
            <ul class="chatbox">
                <li class="chat incoming">
                    <span class="material-symbols-outlined">smart_toy</span>
                    <p>Hi there 👋<br>How can I help you today?</p>
                </li>
            </ul>
            <div class="chat-input">
                <textarea id="user-input" placeholder="Enter a message..." spellcheck="false" required></textarea>
                <span id="send-btn" class="material-symbols-rounded" onclick="sendQuestion()">send</span>
            </div>
        </div>
    </body>
</html>
<script>
    const chatbox = document.getElementById("chatbox");
    const chatInput = document.getElementById("user-input");
    const messageElement = chatElement.querySelector("p");
    const inputInitHeight = chatInput.scrollHeight;
    const createChatLi = (message, className) => {
        // Create a chat <li> element with passed message and className
        const chatLi = document.createElement("li");
        chatLi.classList.add("chat", `${className}`);
        let chatContent = className === "outgoing" ? `<p></p>` : `<span class="material-symbols-outlined">smart_toy</span><p></p>`;
        chatLi.innerHTML = chatContent;
        chatLi.querySelector("p").textContent = message;
        return chatLi; // return chat <li> element
    }

    async function sendQuestion() {
        const userMessage = chatInput.value.trim();
        if (!userMessage) return;

        chatInput.value = ""; // Xóa input

        // Tạo và thêm tin nhắn của người dùng
        const userChatLi = createChatLi(userMessage, "outgoing");
        chatbox.appendChild(userChatLi);

        // Gửi câu hỏi đến FastAPI
        const response = await fetch('http://http://127.0.0.1:5050/generative_ai', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ question: userMessage })
        });

        if (response.ok) {
            const data = await response.json();
            const answer = data.answer;

            // Tạo và thêm câu trả lời từ bot
            const botChatLi = createChatLi(answer, "incoming");
            chatbox.appendChild(botChatLi);
        } else {
            // Tạo và thêm tin nhắn lỗi
            const errorChatLi = createChatLi("Oops! Something went wrong. Please try again.", "incoming");
            chatbox.appendChild(errorChatLi);
        }
        
        // Cuộn đến tin nhắn mới nhất
        chatbox.scrollTop = chatbox.scrollHeight; 
    }

    // Tương tác tắt/mở chatbot
    document.querySelector(".chatbot-toggler").addEventListener("click", () => {
        document.body.classList.toggle("show-chatbot");
    });

    document.querySelector(".close-btn").addEventListener("click", () => {
        document.body.classList.remove("show-chatbot");
    });

    chatInput.addEventListener("keydown", (e) => {
        if (e.key === "Enter" && !e.shiftKey) {
            e.preventDefault();
            sendQuestion();
        }
    });
</script>




