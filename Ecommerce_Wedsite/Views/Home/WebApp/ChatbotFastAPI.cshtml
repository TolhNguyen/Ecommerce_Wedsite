
<!DOCTYPE html>
<!-- Coding By CodingNepal - www.com -->
<html lang="en" dir="ltr">
    <head>
        <meta charset="utf-8">
        <title>Chatbot in JavaScript | CodingNepal</title>
        <link rel="stylesheet" href="~/css/chatbot3.css" type="text/css" media="all">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <!-- Google Fonts Link For Icons -->
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,1,0" /> 
    </head>
    <body>
    <button class="chatbot-toggler" style="margin-right: 30px;">
            <span class="material-symbols-rounded">mode_comment</span>
            <span class="material-symbols-outlined">close</span>
        </button>
        <div class="chatbot" style="z-index: 99998;">
            <header>
                <h2>Chat bot</h2>
                <span class="close-btn material-symbols-outlined">close</span>
            </header>
            <ul class="chatbox">
                <li class="chat incoming">
                    <span class="material-symbols-outlined">smart_toy</span>
                    <p>Hi there 👋<br>How can I help you today?</p>
                </li>
            </ul>
            <div class="chat-input">
                <textarea id="user-input" placeholder="Enter a message..." spellcheck="false" required></textarea>
                <span id="send-btn" class="material-symbols-rounded" onclick="sendQuestion()">send</span>
            </div>
        </div>
    </body>
</html>

<script>
    // Chạy được Chat bot RAG rồi
    const chatbotToggler = document.querySelector(".chatbot-toggler");
    const closeBtn = document.querySelector(".close-btn");
    const chatbox = document.querySelector(".chatbox");
    const chatInput = document.getElementById("user-input");
    const sendChatBtn = document.getElementById("send-btn");

    const inputInitHeight = chatInput.scrollHeight;
    let userMessage = null;

    const createChatLi = (message, className) => {
        const chatLi = document.createElement("li");
        chatLi.classList.add("chat", className);
        let chatContent = className === "outgoing" ? `<p></p>` : `<span class="material-symbols-outlined">smart_toy</span><p></p>`;
        chatLi.innerHTML = chatContent;
        chatLi.querySelector("p").textContent = message;
        return chatLi;
    };
    
    async function sendQuestion() {
        userMessage = chatInput.value.trim();
        if (!userMessage) return;

        chatInput.value = "";
        chatInput.style.height = `${inputInitHeight}px`;
        chatbox.appendChild(createChatLi(userMessage, "outgoing"));
        chatbox.scrollTo(0, chatbox.scrollHeight);

        // Tạo thẻ "Thinking..." trong khi chờ phản hồi từ API
        const thinkingMessage = createChatLi("Thinking...", "incoming");
        chatbox.appendChild(thinkingMessage);
        chatbox.scrollTo(0, chatbox.scrollHeight);

        // Gửi câu hỏi đến API
        try {
            const response = await fetch('http://127.0.0.1:5050/generative_ai', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ question: userMessage })
            });

            if (response.ok) { // .ok: kiểm tra xem thành công hay không? (true / false)
                const data = await response.json();
                const answer = data.answer;

                // Thay thế nội dung "Thinking..." bằng câu trả lời
                thinkingMessage.querySelector("p").textContent = answer;
                chatbox.scrollTo(0, chatbox.scrollHeight);
            } else {
                console.error('Failed to fetch the answer from the API');
                thinkingMessage.querySelector("p").textContent = "Error fetching response.";
            }
        } catch (error) {
            console.error('Error:', error);
            thinkingMessage.querySelector("p").textContent = "Error occurred.";
        }
    }
    
    // Điều chỉnh chiều cao của textarea dựa trên nội dung
    chatInput.addEventListener("input", () => {
        chatInput.style.height = `${inputInitHeight}px`;
        chatInput.style.height = `${chatInput.scrollHeight}px`;
    });

    // Xử lý sự kiện Enter để gửi tin nhắn
    chatInput.addEventListener("keydown", (e) => {
        if (e.key === "Enter" && !e.shiftKey && window.innerWidth > 800) {
            e.preventDefault();
            sendQuestion();
        }
    });

    sendChatBtn.addEventListener("click", sendQuestion);

    // Tương tác tắt/mở chatbot
    document.querySelector(".chatbot-toggler").addEventListener("click", () => {
        document.body.classList.toggle("show-chatbot");
    });

    document.querySelector(".close-btn").addEventListener("click", () => {
        document.body.classList.remove("show-chatbot");
    });
</script>





